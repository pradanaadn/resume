name: Create releases for specific tags

on:
  push:
    tags:
      - 'v-ds-*'
      - 'v-*'

permissions:
  contents: write

jobs:
  release:
    name: Create releases for matching tags
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for better tag handling

      - name: Extract tag name
        id: extract_tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # Convert v-ds-x.x.x to "Data Scientist Version x.x.x"
          if [[ $TAG_NAME == v-ds-* ]]; then
            VERSION=${TAG_NAME#v-ds-}
            TITLE="DS v.$VERSION"
          else
            VERSION=${TAG_NAME#v-}
            TITLE="$VERSION"
          fi
          
          echo "version=$TITLE" >> $GITHUB_OUTPUT
      - name: Read and sanitize release note
        id: release_note
        run: |
          CV_PATH="rendercv_output/Putu_Gede_Pradana_Adnyana_CV.md"
          if [ -f "$CV_PATH" ]; then
            CONTENT=$(cat "$CV_PATH")
            # Escape newlines and quotes for JSON
            SANITIZED=$(echo "$CONTENT" | jq -Rsa .)
            echo "note=$SANITIZED" >> $GITHUB_OUTPUT
            echo "has_notes=true" >> $GITHUB_OUTPUT
          else
            DEFAULT_NOTE="Release ${TAG_NAME}
            This is an automated release created from tag ${TAG_NAME}."
            SANITIZED=$(echo "$DEFAULT_NOTE" | jq -Rsa .)
            echo "note=$SANITIZED" >> $GITHUB_OUTPUT
            echo "has_notes=false" >> $GITHUB_OUTPUT
          fi
      - name: Verify PDF exists
        id: check_pdf
        run: |
          PDF_PATH="rendercv_output/Putu_Gede_Pradana_Adnyana_CV.pdf"
          if [ -f "$PDF_PATH" ]; then
            echo "pdf_exists=true" >> $GITHUB_OUTPUT
          else
            echo "pdf_exists=false" >> $GITHUB_OUTPUT
            echo "::warning::PDF file not found at $PDF_PATH"
          fi
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Read the content directly from file and encode as base64
          NOTES_B64=$(base64 -w 0 rendercv_output/Putu_Gede_Pradana_Adnyana_CV.md)
          
          # Decode and use the content
          gh release create "${{ steps.extract_tag.outputs.tag_name }}" \
            --repo="${GITHUB_REPOSITORY}" \
            --title="${{ steps.extract_tag.outputs.version }}" \
            --notes-file=rendercv_output/Putu_Gede_Pradana_Adnyana_CV.md \
            ./rendercv_output/Putu_Gede_Pradana_Adnyana_CV.pdf
